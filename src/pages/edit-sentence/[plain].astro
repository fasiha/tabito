---
import type { Word } from "curtiz-japanese-nlp/interfaces";
import { getSentence, upsertSentence } from "../../db";
import { analyzeString, jmdictSeqsToWords } from "../../nlp-wrappers/curtiz";
import { rawToIchiran } from "../../nlp-wrappers/ichiran";
import type { Sentence as SentenceType } from "../../interfaces/backend";

import Basic from "../../layouts/Basic.astro";
import { SentenceEditor } from "../../components/preact/SentenceEditor";
import "../../styles/tables.css";
import "../../styles/editor.css";

const { plain } = Astro.params;
if (!plain) throw new Error("parameter not provided unexpectedly");

// Terrible hack to get to MeCab's nBest parsing but, manually add a query parameter to the URL to access this:
const nBestRaw = Astro.url.searchParams.get("nBest");
const nBestNum = Number(nBestRaw);
const nBest = nBestRaw && isFinite(nBestNum) && nBestNum >= 0 ? nBestNum : undefined;

// Another terrible hack to rerun analysis (e.g., if Kamiya-Codec has changed in Curtiz-Japanese-NLP):
const reanalyze = Astro.url.searchParams.has("reanalyze");

const existing = await getSentence(plain);
if (
  reanalyze ||
  existing === undefined ||
  (typeof existing === "object" && !existing.nlp) ||
  typeof nBest === "number"
) {
  const curtiz = await analyzeString(plain, nBest);
  const { ichiran, jmdictSeqs, seqMap } = await rawToIchiran(plain);
  const words = Object.fromEntries(
    (await jmdictSeqsToWords(jmdictSeqs)).filter((x): x is Word => !!x).map((w) => [w.id, w])
  );

  {
    const moreSeqs = jmdictSeqs.filter((x) => !(x in words) && x in seqMap);
    const moreWords = await jmdictSeqsToWords(moreSeqs.map((x) => seqMap[x]));
    for (const [idx, w] of moreWords.entries()) {
      if (w) {
        // we know we're not overwriting anything here because `w.id` isn't in `words` by construction
        words[moreSeqs[idx]] = w;
      }
    }
  }

  const furigana = typeof curtiz === "string" ? [curtiz] : curtiz.furigana.flat();
  const sentence: SentenceType = {
    furigana: existing?.furigana || furigana, // keep old furigana as it might have corrections
    ...existing,
    nlp: { curtiz, ichiran, words },
  };
  await upsertSentence(sentence);
}
---

<script>
  const url = new URL(window.location.href);
  if (url.searchParams.has("reanalyze")) {
    url.searchParams.delete("reanalyze");
    window.history.replaceState(null, "", url.toString());
  }
</script>

<Basic title="Sentence Editor">
  <h1>Sentence Editor</h1>
  <SentenceEditor plain={plain} client:only="preact" />
</Basic>
