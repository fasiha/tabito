---
export const prerender = true;

import "../styles/editor.css";

import { enrollSentenceIntoDoc, getSentence } from "../db";
import { Sentence } from "./preact/Sentence";
import { SentenceAnnotations } from "./solid/SentenceAnnotations";
import type { AnnotatedSentence, Sentence as SentenceType } from "../interfaces/backend";

interface Props {
  plain: string;
  d: string;
}

const { plain, d: docName } = Astro.props;

await enrollSentenceIntoDoc(plain, docName);
const sentence: AnnotatedSentence | undefined = await getSentence(plain, false);
if (sentence) {
  const curtiz = (sentence as SentenceType).nlp?.curtiz;
  if (typeof curtiz === "object") sentence.kanjidic = curtiz.kanjidic;
  delete (sentence as any)["nlp"];
}
---

<style>
  .sentence-annotations {
    position: absolute;
    visibility: hidden;
    z-index: 1;
    background: var(--background-color);

    padding: 0.5rem;
    border: 2px solid var(--border-color);
    border-radius: 10px;
    box-shadow: 0 4px 6px var(--shadow-color);
    transition:
      background-color 0.3s,
      border-color 0.3s,
      box-shadow 0.3s;

    left: 0;
    max-height: 75vh;
    overflow-y: scroll;
  }
  .hover-area:hover .sentence-annotations {
    visibility: visible;
  }

  .hover-area {
    display: inline-block;
  }
</style>

<span class="sentence-container">
  {sentence ? <Sentence sentence={sentence} /> : plain}
  <div class="hover-area">
    <a href={`/edit-sentence/${plain}`}>
      {sentence ? (sentence?.translations ? "üìù" : "‚ùì") : "‚ùå"}
    </a>
    {
      sentence && (
        <div class="sentence-annotations">
          <SentenceAnnotations sentence={sentence} client:visible />
        </div>
      )
    }
  </div>
</span>
