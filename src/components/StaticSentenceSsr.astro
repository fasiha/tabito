---
export const prerender = true;

import {
  enrollSentenceIntoDoc,
  getSentence,
  sentenceExists,
  upsertSentence,
} from "../db";
import { analyzeString, stringToFurigana } from "../nlp-wrappers/curtiz";
import { rawToIchiran } from "../nlp-wrappers/ichiran";
import { Sentence } from "./Sentence";

interface Props {
  plain: string;
  docName: string;
}

const { plain, docName } = Astro.props;

enrollSentenceIntoDoc(plain, docName);
if (!sentenceExists(plain)) {
  const curtiz = await analyzeString(plain);
  const ichiran = await rawToIchiran(plain);
  upsertSentence({
    furigana: typeof curtiz === "string" ? [curtiz] : curtiz.furigana.flat(),
    curtiz,
    ichiran,
  });
}
const sentence = getSentence(plain);
if (!sentence || typeof sentence === "string")
  throw new Error("sentence not in database");
---

<Sentence client:load sentence={sentence} /><a href={`/edit-sentence/${plain}`}
  >{sentence.translations?.en.length ? "üìù" : "‚ùì"}</a
>
